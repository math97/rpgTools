generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum AbilityScoreType {
  STR
  DEX
  CON
  INT
  WIS
  CHA
}

enum ArmorClass {
  NONE
  LIGHT
  MEDIUM
  HEAVY
  ALL
}

enum Size {
  TINY
  SMALL
  MEDIUM
  LARGE
  HUGE
  GARGANTUAN
}

model Guild {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  guildId     String    @unique
  description String?
  homeBrew    HomeBrew? @relation("GuildHomeBrew")
}

model HomeBrew {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  guildId     String       @unique
  guild       Guild        @relation("GuildHomeBrew", fields: [guildId], references: [guildId])
  races       CustomRace[] @relation("HomeBrewCustomRace")
}

model CustomRace {
  id                  String         @id @default(auto()) @map("_id") @db.ObjectId
  name                String         @unique
  description         String
  languages           String[]
  movementSpeed       Float
  traits              String[]
  proficienciesNumber Int
  proficiencies       String[]
  abilityScore        AbilityScore[]
  size                Size
  homeBrew            HomeBrew?      @relation("HomeBrewCustomRace", fields: [homeBrewId], references: [id])
  homeBrewId          String?        @unique @db.ObjectId
}

model BaseRace {
  id                  String         @id @default(auto()) @map("_id") @db.ObjectId
  name                String         @unique
  languages           String[]
  movementSpeed       Float
  traits              String[]
  proficienciesNumber Int
  proficiencies       String[]
  abilityScore        AbilityScore[]
  size                Size
  subRaces            SubRace[]
}

model SubRace {
  id                  String         @id @default(auto()) @map("_id") @db.ObjectId
  name                String         @unique
  description         String
  languages           String[]
  traits              String[]
  proficienciesNumber Int
  proficiencies       String[]
  abilityScore        AbilityScore[]
  BaseRace            BaseRace?      @relation(fields: [baseRaceId], references: [id])
  baseRaceId          String?        @db.ObjectId
}

model AbilityScore {
  id         String           @id @default(auto()) @map("_id") @db.ObjectId
  type       AbilityScoreType
  value      Int
  Race       CustomRace?      @relation(fields: [raceId], references: [id])
  raceId     String?          @db.ObjectId
  BaseRace   BaseRace?        @relation(fields: [baseRaceId], references: [id])
  baseRaceId String?          @db.ObjectId
  SubRace    SubRace?         @relation(fields: [subRaceId], references: [id])
  subRaceId  String?          @db.ObjectId
}

model Levels {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  level           Int
  proficiency     Int
  features        String[]
  spellSlots      Int[]
  cantrips        Int[]
  martialArtsDice String
  ki              Int?
  fury            Int?
  furyDamage      Int?
}

model Role {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  image         String
  className     String   @unique
  hitDie        Int
  proficiencies String[]
  savingThrows  String[]
  skills        String[]
}
